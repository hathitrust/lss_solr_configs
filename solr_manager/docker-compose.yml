# a docker-compose.yml to start a simple cluster with three ZooKeeper nodes (external) and three Solr nodes.
# Check this page (https://hathitrust.atlassian.net/wiki/spaces/HAT/pages/3190292502/Solr+cloud+and+external+Zookeeper+parameters)
# to a better understanding of Solr and Zookeeper set up.
services:
  solr_manager:
    build:
      context: .
      target: runtime
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        ENV: ${ENV:-dev}
        POETRY_VERSION: ${POETRY_VERSION:-1.5.1}
        SOLR_PASSWORD: ${SOLR_PASSWORD:-solr}
        SOLR_USER: ${SOLR_USER:-solrRocks}
        ZK_HOST: ${ZK_HOST:-zoo1:2181,zoo2:2181,zoo3:2181}
    env_file:
      - .env
    volumes:
      - .:/app
    stdin_open: true
    depends_on:
      solr1:
        condition: service_healthy
      solr2:
        condition: service_healthy
      solr3:
        condition: service_healthy
    tty: true
    container_name: solr_manager
    networks:
      - solr
  solr1:
    image: ghcr.io/hathitrust/full-text-search-external_zoo:shards-8.11
    container_name: solr1
    ports:
     - "8981:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181 # If you want to add more zookeeper servers, you can add them separated.
                          # For example: ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
      - SOLR_OPTS=-XX:-UseLargePages # get rid of "shared memory" warnings on Solr
                             # startup => https://solr.apache.org/guide/solr/latest/deployment-guide/docker-faq.html
    networks:
      - solr
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/usr/bin/curl", "-s", "-f", "http://solr1:8983/solr/#/admin/ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: solr-foreground -c # Solr command to start the container to make sure the security.json is created
  solr2:
    image: ghcr.io/hathitrust/full-text-search-external_zoo:shards-8.11
    #build:
    #  context: ..
    #  dockerfile: solr8.11.2_files/Dockerfile
    #  target: external_zookeeper
    container_name: solr2
    ports:
     - "8982:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - solr
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/usr/bin/curl", "-s", "-f", "http://solr2:8983/solr/#/admin/ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: solr-foreground -c
  solr3:
    image: ghcr.io/hathitrust/full-text-search-external_zoo:shards-8.11
    #build:
    #  context: ..
    #  dockerfile: solr8.11.2_files/Dockerfile
    #  target: external_zookeeper
    container_name: solr3
    ports:
     - "8983:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - solr
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/usr/bin/curl", "-s", "-f", "http://solr3:8983/solr/#/admin/ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: solr-foreground -c
  zoo1:
    image: zookeeper:3.8.0
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - solr
    volumes:
      - zoo1_data:/data
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 30s
      timeout: 10s
      retries: 5
  zoo2:
    image: zookeeper:3.8.0
    container_name: zoo2
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
      - 7002:7000
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - solr
    volumes:
      - zoo2_data:/data
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 30s
      timeout: 10s
      retries: 5
  zoo3:
    image: zookeeper:3.8.0
    container_name: zoo3
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
      - 7003:7000
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - solr
    volumes:
      - zoo3_data:/data
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 30s
      timeout: 10s
      retries: 5
networks:
  solr:
volumes:
  zoo1_data: null
  zoo2_data: null
  zoo3_data: null